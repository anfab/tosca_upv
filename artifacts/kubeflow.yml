---
- name: Install Kubeflow
  hosts: localhost
  connection: local
  vars:
    VERSION: "{{ kubeflow_manifests_version | default('v1.6.1') }}"
    USER_MAIL: "{{ kubeflow_user | default('user@example.com') }}"
    USER_PASS: "{{ kubeflow_pass | default('$2y$12$4K/VkmDd1q1Orb3xAt82zu8gk7Ad6ReFR4LCP9UeYE90NLiN9Df72') }}"
    DEPLOY_MLFLOW: "{{ kubeflow_mlflow | default(false) }}"
    MLFLOW_DATA_SPACE: "{{ kubeflow_mlflow_data_space | default('10Gi') }}"
  tasks:
    - name: Install Git
      package: name=git

    - name: Git clone kubeflow manifests repo
      git:
        repo: https://github.com/kubeflow/manifests
        dest: /tmp/kubeflow
        version: "{{ VERSION }}"
        update: false

    - name: Set kubeflow user
      lineinfile:
        path: /tmp/kubeflow/common/dex/base/config-map.yaml
        regexp: '    - email: '
        line: '    - email: {{ USER_MAIL }}'

    - name: Set kubeflow pass
      lineinfile:
        path: /tmp/kubeflow/common/dex/base/config-map.yaml
        regexp: '      hash: '
        line: '      hash: {{ USER_PASS }}'

    - name: Install kustomize 3.2.0
      get_url:
        url: https://github.com/kubernetes-sigs/kustomize/releases/download/v3.2.0/kustomize_3.2.0_linux_amd64
        dest: /opt/kustomize
        mode: '0777'
      when: VERSION == "v1.6.1"

    - name: Install kustomize 5.0.0
      unarchive:
        src: https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.0.0/kustomize_v5.0.0_linux_amd64.tar.gz
        dest: /opt/
        remote_src: true
      when: VERSION == "v1.7.0"

    - name: Install kustomize 5.0.3
      unarchive:
        src: https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.0.3/kustomize_v5.0.3_linux_amd64.tar.gz
        dest: /opt/
        remote_src: true
      when: VERSION == "v1.8.0"

    - name: Install kustomize 5.2.1
      unarchive:
        src: https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.2.1/kustomize_v5.2.1_linux_amd64.tar.gz
        dest: /opt/
        remote_src: true
      when: VERSION == "v1.9.1"

    - name: Build kubeflow yaml
      shell: /opt/kustomize build example | awk '!/well-defined/' > kubeflow.yaml
      args:
        chdir: /tmp/kubeflow
        creates: /tmp/kubeflow/kubeflow.yaml

    - name: Add kubeflow-user RoleBinding + Ingress
      blockinfile:
        path: /tmp/kubeflow/kubeflow.yaml
        marker: "#-- {mark} ANSIBLE MANAGED BLOCK --"
        block: |
          ---
          apiVersion: v1
          kind: Namespace
          metadata:
            name: kubeflow-user
          ---
          apiVersion: rbac.authorization.k8s.io/v1
          kind: RoleBinding
          metadata:
            name: kubeflow-user-edit
            namespace: kubeflow-user
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: kubeflow-edit
          subjects:
          - apiGroup: rbac.authorization.k8s.io
            kind: User
            name: {{ USER_MAIL }}
          ---
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: istio-ingressgateway
            namespace: istio-system
            annotations:
              kubernetes.io/ingress.class: nginx
          spec:
            rules:
            - http:
                paths:
                - path: /
                  backend:
                    service:
                      name: istio-ingressgateway
                      port:
                        number: 80
                  pathType: Prefix
                - path: /dashboard_lib.bundle.js
                  backend:
                    service:
                      name: istio-ingressgateway
                      port:
                        number: 80
                  pathType: Exact

    - name: Set fact namespace
      set_fact:
        user_namespace: "kubeflow-{{ USER_MAIL | regex_replace('@|\\.|_', '-') }}"

    - name: Add kubeflow user profile
      blockinfile:
        path: /tmp/kubeflow/kubeflow.yaml
        marker: "#-- {mark} USER PROFILE --"
        block: |
          ---
          apiVersion: kubeflow.org/v1beta1
          kind: Profile
          metadata:
            name: {{ user_namespace }}
          spec:
            owner:
              kind: User
              name: {{ USER_MAIL }}
      when: USER_MAIL != "user@example.com"

    - name: Add Access Kubeflow Pipelines from Jupyter notebook
      blockinfile:
        path: /tmp/kubeflow/kubeflow.yaml
        marker: "#-- {mark} Access Kubeflow Pipelines from Jupyter notebook --"
        block: |
          ---
          apiVersion: security.istio.io/v1beta1
          kind: AuthorizationPolicy
          metadata:
            name: bind-ml-pipeline-nb-{{ user_namespace }}
            namespace: kubeflow
          spec:
            selector:
              matchLabels:
                app: ml-pipeline
            rules:
            - from:
              - source:
                  principals: ["cluster.local/ns/{{ user_namespace }}/sa/default-editor"]
          ---
          apiVersion: kubeflow.org/v1alpha1
          kind: PodDefault
          metadata:
            name: access-ml-pipeline
            namespace: {{ user_namespace }}
          spec:
            desc: Allow access to Kubeflow Pipelines
            selector:
              matchLabels:
                access-ml-pipeline: "true"
            volumes:
              - name: volume-kf-pipeline-token
                projected:
                  sources:
                    - serviceAccountToken:
                        path: token
                        expirationSeconds: 7200
                        audience: pipelines.kubeflow.org
            volumeMounts:
              - mountPath: /var/run/secrets/kubeflow/pipelines
                name: volume-kf-pipeline-token
                readOnly: true
            env:
              - name: KF_PIPELINES_SA_TOKEN_PATH
                value: /var/run/secrets/kubeflow/pipelines/token

    - name: Add MLFlow deployment
      blockinfile:
        path: /tmp/kubeflow/kubeflow.yaml
        marker: "#-- {mark} MLFLOW --"
        block: |
          ---
          apiVersion: v1
          kind: Namespace
          metadata:
            name: mlflow
          ---
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: mlflow-sa
            namespace: mlflow
          ---
          kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
            name: mlflow-pvc
            namespace: mlflow
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ MLFLOW_DATA_SPACE }}
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: mlflow-service
            namespace: mlflow
          spec:
            selector:
              app: mlflow
            ports:
              - protocol: TCP
                port: 5000
                targetPort: 5000
          ---
          apiVersion: networking.istio.io/v1beta1
          kind: VirtualService
          metadata:
            name: mlflow
            namespace: mlflow
          spec:
            gateways:
            - kubeflow/kubeflow-gateway
            hosts:
            - '*'
            http:
            - match:
              - uri:
                  prefix: /mlflow/
              rewrite:
                uri: /
              route:
              - destination:
                  host: mlflow-service.mlflow.svc.cluster.local
                  port:
                    number: 5000
          ---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: mlflow-deployment
            namespace: mlflow
            labels:
              app: mlflow
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: mlflow
            template:
              metadata:
                labels:
                  app: mlflow
              spec:
                serviceAccountName: mlflow-sa
                containers:
                  - name: mlflow
                    image: grycap/mlflow
                    imagePullPolicy: Always
                    command:
                      - "mlflow"
                      - "server"
                      - "--host"
                      - "0.0.0.0"
                      - --artifacts-destination
                      - s3://mlflow
                      - "--backend-store-uri"
                      - "sqlite:///data/mlflow.db"
                    env:
                    - name: AWS_ACCESS_KEY_ID
                      value: minio
                    - name: AWS_SECRET_ACCESS_KEY
                      value: minio123
                    - name: MLFLOW_S3_ENDPOINT_URL
                      value: http://minio-service.kubeflow:9000
                    - name: MLFLOW_S3_IGNORE_TLS
                      value: "true"
                    ports:
                      - containerPort: 5000
                    volumeMounts:
                    - name: mlflow
                      mountPath: /data
                volumes:
                  - name: mlflow
                    persistentVolumeClaim:
                      claimName: mlflow-pvc
      when: DEPLOY_MLFLOW

    - name: Add MLFlow menu entry
      replace:
        path: /tmp/kubeflow/kubeflow.yaml
        regexp: '      "externalLinks": \[ \],'
        replace: '      "externalLinks": [{"type": "item", "link": "/mlflow/", "text": "MlFlow", "icon": "icons:cached"}],'
      when: DEPLOY_MLFLOW

    - name: Deploy kubeflow
      command: kubectl apply -f kubeflow.yaml
      args:
        chdir: /tmp/kubeflow
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: kresult
      until: "kresult is not failed"
      retries: 10
      delay: 10

    - name: Create serviceaccount default-editor in kubeflow-user ns
      shell: kubectl get sa -n kubeflow-user default-editor || kubectl -n kubeflow-user create serviceaccount default-editor
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Download Minio Client binary
      get_url:
        url: https://dl.minio.io/client/mc/release/linux-amd64/mc
        dest: /usr/local/bin/mc
        mode: '755'
      when: DEPLOY_MLFLOW

    - name: Get minio service IP
      command: kubectl get -n kubeflow service/minio-service -o jsonpath='{.spec.clusterIP}'
      register: minio_service
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      when: DEPLOY_MLFLOW

    - name: Create MLFlow bucket in minio
      shell: mc config host add minio http://{{ minio_service.stdout }}:9000 minio minio123 && mc ls minio/mlflow || mc mb minio/mlflow
      when: DEPLOY_MLFLOW
